
Help:
  help         Display this help and exit
  help-exp     Display advanced help and exit 

All-in-one commands:
  user-install Configure, compile the system to be executed from the
               sources, and install it in your user account. Warnings 
               about unused predicates are enabled.  Used by Ciao developers. 

 devel-install Like user-install, but enables runtime checks by default.
  user-compile   [not documented]
  system-install [not documented]
  alldocs        [not documented]

Configuration:
  configure --help   Display full list of configuration options
  configure          Configure the system automatically (before build)
  configure --menu   Configure the system interactively (before build)
  config_prepare [not documented]
  user_config    [not documented]
  menuconfig     [not documented]
  justmenuconfig [not documented]

  settings_default [not documented]
  clean_config   [not documented]

Compilation:
  build        Compile the whole CiaoDE system (engine, libraries, ...)
               (omitting docs, see 'docs' option below).
  promote      Promote bootstrap 'ciaoc' compiler

  justall      [not documented]
  all          [not documented]
  all_extra    Perform 'all' command on all components (except 'ciao')
  engine       [not documented]
  compiler     [not documented]
  applications [not documented]

  all_ciao       Perform 'all' command on 'ciao' component
  all_ciao_gmake 'all' command on gmake of 'ciao' component (internal)
  libraries      [not documented]
  librariesciao  [not documented]
  platdep        [not documented]
  crossengine    [not documented]
  librariesextra [not documented]
  allnolibs      [not documented]
  allnolibsciao  [not documented]
  allnolibsextra [not documented]

  clean_eng [not documented]
  clean_etc [not documented]
  clean_bin [not documented]
  clean_lib [not documented]
  rpdclean [not documented]
  clean_nodistribute [not documented]

Documentation:
  docs         Generate (or update) all documentation using LPdoc.
               Documentation is included in some distributions,
               but this is needed when compiling fresh out of 
               the repository or after changes in the sources.
  descfile     [not documented]
  tardocs      [not documented]

  docs_readmes   Perform 'docs_readmes' command on the 'wholesystem' component

  clean_docs     [not documented]
  clean_justdocs [not documented]
  clean_installeddocs [not documented]

  clean_justdocs [not documented]
  clean_docstmp  [not documented]
  clean_docspackage [not documented]

Installation:
  install      Install the whole CiaoDE system 
               (neeed to build the system before).

  uninstall    Uninstall CiaoDE.
  install_to_destroot [not documented]
  install_ciao        [not documented]
  install_extras      [not documented]

  generate_revision   [not documented]
  fullinstall         build+docs+install
  uninstallciao       [not documented]

  register_all        Register all components in your system (update shell scripts
                      and emacs configuration files). If some component was already
                      registered, this command updates the registered information.

  show_components     Show all available components

LPdoc:
  all_lpdoc     Perform 'all' command on 'lpdoc' component

CiaoPP:
  all_ciaopp      Perform 'all' command on 'ciaopp' component
  calibrateciaopp [not documented]

CHR:
  all_chr    Perform 'all' action on CHR component
  clean_chr [not documented]

Javall library:
  clean_java [not documented]

Emacs mode:
  clean_emacs [not documented]

Maintenance:
  clean        Clean CiaoDE auto-generated files, excluding documentation
               and additional files such as logs, temporary files, etc.

  distclean    Clean CiaoDE auto-generated files, excluding documentation.

  braveclean   Clean CiaoDE auto-generated files, including documentation,
               but keep configuration choices.

  realclean    Clean all CiaoDE auto-generated files, and also 
               configuration choices. 

  bootclean    Remove binary files.
  clean_recursive [not documented]
  clean_dir_recursive [not documented]
  clean_java [not documented]
  packageclean [not documented]
  ilciaoclean [not documented]
  clean_platdep [not documented]
  clean_log [not documented]
  clean_build [not documented]

Testing:
  runtests     Execute all tests (regression, etc.) available in the system.

Benchmarking:
  runtests     Execute all benchmarks available in the system.

MiniProlog (a simple WAM for time analysis):
  miniprolog   [not documented]
  clean_miniprolog [not documented]

Profiling configuration:
  profiler   [not documented]
  clean_profiler [not documented]

Installation Package Generation:
  installer_win32    [not documented]
  installer_rpm      [not documented]
  installer_rpm_spec [not documented]
  installer_app      [not documented]
  installer_macport  [not documented]
  installer_pkg      [not documented]
  installer_tgz      [not documented]
  installer_tbz      [not documented]
  installer_bin      [not documented]
  installer_bin_tgz  [not documented]
  installer_bin_tbz  [not documented]
  installer_noa      [not documented]
  installer_noa_tgz  [not documented]
  installer_noa_tbz  [not documented]
  installer_raw      [not documented]
  installer_raw_tgz  [not documented]
  installer_raw_tbz  [not documented]

Run-time Checks:
  rt-compile0 [not documented]
  rt-compile1 [not documented]

    The rt-compile option includes a lot of steps and is not currently
    incremental.  It needs to be improved once we have move the whole
    system to (optionally) placing the compiled modules
    (.po/.asr/.itf) in a single directory (as done by optim_comp).

    To compile CiaoDE with run-time checks in the libraries, run:

      ./ciaosetup rt-compile0
      ./ciaosetup rt-compile1
