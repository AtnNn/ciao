:- module(ciaoengine, [], [assertions, library(compiler/emugen)]).

:- doc(title, "The Ciao Engine").
:- doc(author, "Ciao developers").

:- doc(module, "An efficient, high-performance, bytecode-based engine,
   with garbage collection, unbound precision integer arithmetic,
   built-in concurrency capabilities, and many other features.

   This is the program that loads and runs Ciao bytecode binaries.").

:- doc(usage, "The command @tt{ciao build core/engine} automatically
   builds the engine binary, including auto-generated engine C
   files. Do not compile this module directly.").

% ---------------------------------------------------------------------------
% TODO: backport core_OC/cmds/loader.pl (extracts some code from internals)

% TODO: collect most of those dependencies from engine/ modules (backport from optim_comp)

% Source C files
:- '$native_include_c_header'('datadefs.h').
:- '$native_include_c_header'('configure.h').
:- '$native_include_c_header'('alloc_init.h').
:- '$native_include_c_header'('termdefs.h').
:- '$native_include_c_header'('access.h').
:- '$native_include_c_header'('locks_prim.h').
:- '$native_include_c_header'('objdefs.h').
:- '$native_include_c_header'('absmach_predef.h').
:- '$native_include_c_header'('support_macros.h').
:- '$native_include_c_header'('eng_dbg.h').
:- '$native_include_c_header'('global_defs.h').
:- '$native_include_c_header'('os_signal.h').
:- '$native_include_c_header'('ciao_gluecode.h').
:- '$native_include_c_header'('threads.h').
:- '$native_include_c_header'('task_areas.h').
:- '$native_include_c_header'('profile_hooks.h').
:- '$native_include_c_header'('tabling.h').
:- '$native_include_c_header'('wam_macros.h').

:- '$native_include_c_header'('instrdefs.h'). % (autogenerated)

:- '$native_include_c_header'('wam.h').
:- '$native_include_c_source'('wam.c').

:- '$native_include_c_source'('format.c').

:- '$native_include_c_header'('io_basic.h').
:- '$native_include_c_source'('io_basic.c').

:- '$native_include_c_source'('misc.c').

:- '$native_include_c_header'('startgoal.h').
:- '$native_include_c_source'('startgoal.c').

:- '$native_include_c_header'('nondet.h').
:- '$native_include_c_source'('nondet.c').

:- '$native_include_c_source'('objareas.c').

:- '$native_include_c_header'('streams_basic.h').
:- '$native_include_c_source'('streams_basic.c').

:- '$native_include_c_header'('timing.h').
:- '$native_include_c_source'('timing.c').

:- '$native_include_c_source'('wambuiltin.c').

:- '$native_include_c_source'('os_utils.c').

:- '$native_include_c_header'('attr.h').
:- '$native_include_c_source'('attr.c').

:- '$native_include_c_source'('dynlink.c').

:- '$native_include_c_header'('tasks.h').
:- '$native_include_c_source'('tasks.c').

:- '$native_include_c_source'('locks.c').

:- '$native_include_c_source'('own_malloc.c').

:- '$native_include_c_source'('own_mmap.c').
:- '$native_include_c_source'('win32_mman.c').

:- '$native_include_c_header'('alloc.h').
:- '$native_include_c_source'('alloc.c').

:- '$native_include_c_header'('wam_alloc.h').
:- '$native_include_c_source'('wam_alloc.c').

:- '$native_include_c_source'('heapgc.c').

:- '$native_include_c_source'('indexing.c').

:- '$native_include_c_header'('initial.h').
:- '$native_include_c_source'('initial.c').

:- '$native_include_c_header'('registers.h').

:- '$native_include_c_header'('stacks.h').
:- '$native_include_c_source'('stacks.c').

:- '$native_include_c_header'('support.h').
:- '$native_include_c_source'('support.c').

:- '$native_include_c_header'('term_support.h').
:- '$native_include_c_source'('term_support.c').

:- '$native_include_c_header'('wamsupport.h').
:- '$native_include_c_source'('wamsupport.c').

:- '$native_include_c_source'('qread.c').

:- '$native_include_c_header'('eng_dbg.h').
:- '$native_include_c_source'('eng_dbg.c').

:- '$native_include_c_source'('interrupt.c').

:- '$native_include_c_source'('gauge.c').

:- '$native_include_c_source'('bignum.c').

:- '$native_include_c_header'('float_consts.h').
:- '$native_include_c_source'('float_consts.c').

:- '$native_include_c_header'('float_tostr.h').
:- '$native_include_c_source'('float_tostr.c').

% TODO: Add ciao_prolog as another library; try to avoid the noalias hack
:- '$native_include_c_header'('ciao_prolog.h', noalias).
:- '$native_include_c_source'('ciao_prolog.c').

:- '$native_include_c_header'('start.h').
:- '$native_include_c_source'('start.c').

% Automatically generated in ciaoc_aux:eng_prebuild_version_info/1
:- '$native_include_c_header'('version.h').
:- '$native_include_c_source'('version.c').

% Automatically generated in build_engine.sh:create_eng_build_info
:- '$native_include_c_source'('eng_build_info.c').

% ---------------------------------------------------------------------------
% Definitions for the bytecode emulator

:- include(.(absmach_def)). % TODO: This should be a compiler option
% Emulator instruction definitions
:- native_export(code(all_ins_op), 'instrdefs.h').
% WAM loop functions (containing instructions code)
:- native_export(code(wam_loop_defs), 'wamloop.c').
% Runtime information for the instruction set
:- native_export(code(absmachdef), 'absmachdef.h').
% Engine info (Makefile format)
:- native_export(code(eng_info_mk), 'eng_info_mk'). % TODO: use module name automatically
% Engine info (sh format)
:- native_export(code(eng_info_sh), 'eng_info_sh'). % TODO: use module name automatically

% ---------------------------------------------------------------------------
