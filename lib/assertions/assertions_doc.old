
:- use_package([]).

:- include(library(assertions)).

:- comment(filetype,package).

%:- comment(title,"Including Assertions and Comments in Source Code").
:- comment(title,"Program assertions package").

:- comment(author,"Manuel Hermenegildo").

:- comment(module,"This library package adds a number of new declaration
   definitions and new operator definitions to user programs. These
   new declarations and operators allow including @concept{assertions}
   in user programs. Such assertions can be used to describe
   predicates, properties, modules, applications, etc. These
   descriptions can be formal specifications (such as preconditions
   and post-conditions) or machine-readable textual
   comments. @cindex{comments, machine readable} The information
   contained in the assertions will be used as input by other tools
   for static or dynamic debugging and for automatic documentation
   generation.

   The exact @concept{syntax of the body of the assertions}
   @cindex{assertions, body syntax} (i.e., the body of the
   @decl{decl/1}, @decl{decl/2}, @decl{prop/1}, @decl{prop/2},
   etc. declarations) is described in @ref{Program assertions}.
   The exact @concept{syntax of comments}
   @cindex{comments, types and syntax} (i.e., those inside the
   @decl{comment/2} declarations and in the comment fields of
   assertions) is described in the autodocumenter (@apl{lpdoc})
   manual.").

:- comment(hide,comment/2). % DOES NOT WORK!
:- comment(comment/2,"See @ref{Program assertions}.").
:- comment(decl/1,"See @ref{Program assertions}.").
:- comment(decl/2,"See @ref{Program assertions}.").
:- comment(pred/1,"See @ref{Program assertions}.").
:- comment(pred/2,"See @ref{Program assertions}.").
:- comment(prop/1,"See @ref{Program assertions}.").
:- comment(prop/2,"See @ref{Program assertions}.").
:- comment(modedef/1,"See @ref{Program assertions}.").
:- comment(calls/1,"See @ref{Program assertions}.").
:- comment(calls/2,"See @ref{Program assertions}.").
:- comment(success/1,"See @ref{Program assertions}.").
:- comment(success/2,"See @ref{Program assertions}.").
:- comment(comp/1,"See @ref{Program assertions}.").
:- comment(comp/2,"See @ref{Program assertions}.").
:- comment(entry/1,"See @ref{Program assertions}.").


:- comment(version_maintenance,dir('../../version')).

:- comment(version(0*8+42,1999/03/06,18:35*03+'CET'), "Wrote basic doc
   for include file. Included file in central version maintenance.
   (Manuel Hermenegildo)").

