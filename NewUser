[WARNING: do not edit, file automatically generated by lpdoc/texinfo]
 
NewUser
*******

Information for first-time Ciao users under Un*x
================================================

   The following are instructions for new Ciao users (users are
referred to these instructions when the `ciao' command is issued, but
the startup files -`.cshrc', `.profile', `.emacs', etc.- have not
been set up fully for using Ciao):

   Welcome to the Ciao Prolog Development System!

   *WARNING*: your shell initialization scripts have not ben properly
modified for locating the Ciao on-line documentation. Please add the
following lines to your shell initialization script(s):

   * For users a _csh-compatible shell_ (`csh', `tcsh', ...), add to
     `~/.cshrc':

                  if ( -e <LIBROOT>/ciao/DOTcshrc ) then
                     source <LIBROOT>/ciao/DOTcshrc
                  endif

     `Mac OS X' users should add (or modify) the `path' file in the
     directory `~/Library/init/tcsh', adding the lines shown above.
     *Note:* while this is recognized by the terminal shell, and
     therefore by the text-mode Emacs which comes with Mac OS X, the
     Aqua native Emacs 21 does not recognize that initialization. It
     is thus necessary, at this moment, to set manually the Ciao
     shell (ciaosh) and Ciao library location by hand. This can be
     done from the Ciao menu within Emacs after a Ciao Prolog file
     has been loaded. We suppose that the reason is that Mac OS X
     does not actually consult the per-user initialization files on
     startup. It should also be possible to put the right
     initializations in the .emacs file using the `setenv' function
     of Emacs-lisp, as in

          (setenv "CIAOLIB" "<LIBROOT>/ciao")

     The same can be done for the rest of the variables initialized
     in `<LIBROOT>/ciao/DOTcshrc'

   * For users of an _sh-compatible shell_ (`sh', `bash', ...), add
     to `~/.profile':

                  if [ -f <LIBROOT>/ciao/DOTprofile ]; then
                     . <LIBROOT>/ciao/DOTprofile
                  fi

     This will set up things so that the Ciao executables are found
     and you can access the Ciao system manuals using the `info'
     command. Note that, depending on your shell, _you may have to
     log out and back in_ for the changes to take effect.

   * Also, if you use `emacs' (highly recommended) add this line to
     your `~/.emacs' file:

                  (load-file "<LIBROOT>/ciao/DOTemacs.el")


   The on-line manuals are available by typing <^h> <i> in `emacs',
starting `info' in a shell, or visiting:

   <LPDOCDIR>

where the Ciao Prolog documentation has been stored in several
formats.

Keeping up to date with the Ciao users mailing list
===================================================

   We recommend that you join the  Ciao _users mailing list_
(`ciao-users@clip.dia.fi.upm.es'), in order to receive information on
new versions and solutions to problems. Simply send a message to
<ciao-users-request@clip.dia.fi.upm.es>, containing in the body only
the word:

   `subscribe'

alone in one line. Messages in the list are strictly limited to
issues directly related to Ciao Prolog and your email address will of
course be kept strictly confidential. You mail also want to subscribe
to the `comp.lang.prolog' newsgroup.

   There is additional info available on the Ciao system, other CLIP
group software, publications on the technology underlying these
systems, etc. in the CLIP group's WWW site
`http://clip.dia.fi.upm.es'.

Downloading new versions
========================

   Ciao and its related libraries and utilities are under constant
improvement, so you should make sure that you have the latest
versions of the different components, which can be dowloaded from:

   `http://clip.dia.fi.upm.es/Software'

Reporting bugs
==============

   If you still have problems after downloading the latest version
and reading the installation instructions you can send a message to
<ciao-bug@clip.dia.fi.upm.es>. Please be as informative as possible
in your messages, so that we can reproduce the bug.

   * For _installation problems_ we typically need to have the
     version and patch number of the Ciao package (e.g., the name of
     the file downloaded), the output produced by the installation
     process (you can capture it by redirecting the output into a
     file or cutting and pasting with the mouse), and the exact
     version of the Operating System you are using (as well as the C
     compiler, if you took a source distribution).

   * For _problems during use_ we also need the Ciao and OS versions
     and a small example of code which we can run to reproduce the
     bug.


