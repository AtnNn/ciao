/* Copyright (C) 1996,1997,1998, 1999, 2000, 2001, 2002  UPM-CLIP */

		       /* INSTRUCTION CODES */

/* This file is filtered by "makecase" which constructs instr2name.h */
/* <insn> ::= <opcode>{<e>|<f>|<i>|<l>|<t>|<x>|<y>|<z>|<C>|<E>|<Q>|<Y>|<Z>|<L>}
   <e> frame_size
   <v> var_count in SRI model only
   <f> functor
   <i> count
   <l> long
   <t> term
   <x> x operand
   <y> y operand
   <z> y operand, low bit -> unsafe
   <C> C/native code pointer
   <E> predicate pointer
   <Q> pad byte
   <Y> ::= <i>{<y>}
   <Z> ::= <i>{<z>}
   <L> large number, (spec functor and data object)
*/

#define Format(x)

#define INITCALLQ 0 Format("QEev" )
#define INITCALL 1 Format("Eev" Descr label_size )
#define FIRSTCALLQ 2 Format("QEev" )
#define FIRSTCALL 3 Format("Eev" Descr ylist_label_size )
#define FIRSTCALL_1Q 4 Format("QyvEev" )
#define FIRSTCALL_1 5 Format("yvEev" )
#define FIRSTCALL_2Q 6 Format("QyvyvEev" )
#define FIRSTCALL_2 7 Format("yvyvEev" )
#define FIRSTCALL_3Q 8 Format("QyvyvyvEev" )
#define FIRSTCALL_3 9 Format("yvyvyvEev" )
#define FIRSTCALL_4Q 10 Format("QyvyvyvyvEev" )
#define FIRSTCALL_4 11 Format("yvyvyvyvEev" )
#define FIRSTCALL_5Q 12 Format("QyvyvyvyvyvEev" )
#define FIRSTCALL_5 13 Format("yvyvyvyvyvEev" )
#define FIRSTCALL_6Q 14 Format("QyvyvyvyvyvyvEev" )
#define FIRSTCALL_6 15 Format("yvyvyvyvyvyvEev" )
#define FIRSTCALL_7Q 16 Format("QyvyvyvyvyvyvyvEev" )
#define FIRSTCALL_7 17 Format("yvyvyvyvyvyvyvEev" )
#define FIRSTCALL_8Q 18 Format("QyvyvyvyvyvyvyvyvEev" )
#define FIRSTCALL_8 19 Format("yvyvyvyvyvyvyvyvEev" )
#define FIRSTCALL_NQ 20 Format("QYEev" )
#define FIRSTCALL_N 21 Format("YEev" )
#define CALLQ 22 Format("QEev" )
#define CALL 23 Format("Eev" Descr zlist_label_size )
#define CALL_1Q 24 Format("QzEev" )
#define CALL_1 25 Format("zEev" )
#define CALL_2Q 26 Format("QzzEev" )
#define CALL_2 27 Format("zzEev" )
#define CALL_3Q 28 Format("QzzzEev" )
#define CALL_3 29 Format("zzzEev" )
#define CALL_4Q 30 Format("QzzzzEev" )
#define CALL_4 31 Format("zzzzEev" )
#define CALL_5Q 32 Format("QzzzzzEev" )
#define CALL_5 33 Format("zzzzzEev" )
#define CALL_6Q 34 Format("QzzzzzzEev" )
#define CALL_6 35 Format("zzzzzzEev" )
#define CALL_7Q 36 Format("QzzzzzzzEev" )
#define CALL_7 37 Format("zzzzzzzEev" )
#define CALL_8Q 38 Format("QzzzzzzzzEev" )
#define CALL_8 39 Format("zzzzzzzzEev" )
#define CALL_NQ 40 Format("QZEev" )
#define CALL_N 41 Format("ZEev" )
#define LASTCALLQ 42 Format("QE" )
#define LASTCALL 43 Format("E" Descr zlist_label )
#define LASTCALL_1Q 44 Format("QzE" )
#define LASTCALL_1 45 Format("zE" )
#define LASTCALL_2Q 46 Format("QzzE" )
#define LASTCALL_2 47 Format("zzE" )
#define LASTCALL_3Q 48 Format("QzzzE" )
#define LASTCALL_3 49 Format("zzzE" )
#define LASTCALL_4Q 50 Format("QzzzzE" )
#define LASTCALL_4 51 Format("zzzzE" )
#define LASTCALL_5Q 52 Format("QzzzzzE" )
#define LASTCALL_5 53 Format("zzzzzE" )
#define LASTCALL_6Q 54 Format("QzzzzzzE" )
#define LASTCALL_6 55 Format("zzzzzzE" )
#define LASTCALL_7Q 56 Format("QzzzzzzzE" )
#define LASTCALL_7 57 Format("zzzzzzzE" )
#define LASTCALL_8Q 58 Format("QzzzzzzzzE" )
#define LASTCALL_8 59 Format("zzzzzzzzE" )
#define LASTCALL_NQ 60 Format("QZE" )
#define LASTCALL_N 61 Format("ZE" )
#define EXECUTEQ 62 Format("QE" )
#define EXECUTE 63 Format("E" Descr label )
#define PROCEED 64 Format("" Descr none )
#define NECK 65 Format("" Descr none )
#define NECK_PROCEED 66 Format("" Descr none )
#define FAIL 67 Format("" Descr none )
#define BRANCH 68 Format("i" Descr i )
#define PUT_X_VOID 69 Format("x" Descr x )
#define PUT_X_VARIABLE 70 Format("xx" Descr rev_x_x )
#define PUT_X_VALUE 71 Format("xx" Descr rev_x_x )
#define PUT_X_UNSAFE_VALUE 72 Format("xx" Descr rev_x_x )
#define PUT_Y_FIRST_VARIABLE 73 Format("xyv" Descr rev_yv_x )
#define PUT_Y_VARIABLE 74 Format("xyv" Descr rev_yv_x )
#define PUT_Y_VALUE 75 Format("xy" Descr rev_y_x )
#define PUT_Y_UNSAFE_VALUE 76 Format("xy" Descr rev_y_x )
#define PUT_CONSTANTQ 77 Format("Qxt" )
#define PUT_CONSTANT 78 Format("xt" Descr tagged_x )
#define PUT_STRUCTUREQ 79 Format("Qxf" )
#define PUT_STRUCTURE 80 Format("xf" Descr functor_x )
#define PUT_NIL 81 Format("x" Descr x )
#define PUT_LIST 82 Format("x" Descr x )
#define PUT_YFVAR_YVAR 83 Format("xyvxyv" Descr rev_yv_x_yv_x )
#define PUT_YVAR_YVAR 84 Format("xyvxyv" Descr rev_yv_x_yv_x )
#define PUT_XVAL_XVAL 85 Format("xxxx" Descr rev_x_x_x_x )
#define PUT_YVAL_YVAL 86 Format("xyxy" Descr rev_y_x_y_x )
#define PUT_YVAL_YUVAL 87 Format("xyxy" Descr rev_y_x_y_x )
#define PUT_YUVAL_YVAL 88 Format("xyxy" Descr rev_y_x_y_x )
#define PUT_YUVAL_YUVAL 89 Format("xyxy" Descr rev_y_x_y_x )
#define GET_X_VARIABLE 90 Format("xx" Descr rev_x_x )
#define GET_X_VALUE 91 Format("xx" Descr rev_x_x )
#define GET_Y_FIRST_VARIABLE 92 Format("xy" Descr rev_y_x )
#define GET_Y_VARIABLE 93 Format("xy" Descr rev_y_x )
#define GET_Y_FIRST_VALUE 94 Format("xy" Descr rev_y_x )
#define GET_Y_VALUE 95 Format("xy" Descr rev_y_x )
#define GET_CONSTANTQ 96 Format("Qxt" )
#define GET_CONSTANT 97 Format("xt" Descr tagged_x )
#define GET_STRUCTUREQ 98 Format("Qxf" )
#define GET_STRUCTURE 99 Format("xf" Descr functor_x )
#define GET_NIL 100 Format("x" Descr x )
#define GET_LIST 101 Format("x" Descr x )
#define GET_CONSTANT_X0Q 102 Format("Qt" )
#define GET_CONSTANT_X0 103 Format("t" Descr tagged )
#define GET_STRUCTURE_X0Q 104 Format("Qf" )
#define GET_STRUCTURE_X0 105 Format("f" Descr functor )
#define GET_NIL_X0 106 Format("" Descr none )
#define GET_LIST_X0 107 Format("" Descr none )
#define GET_XVAR_XVAR 108 Format("xxxx" Descr rev_x_x_x_x )
#define GET_YFVAR_YVAR 109 Format("xyxy" Descr rev_y_x_y_x )
#define GET_YVAR_YVAR 110 Format("xyxy" Descr rev_y_x_y_x )
#define GET_CONSTANT_NECK_PROCEEDQ 111 Format("Qxt" )
#define GET_CONSTANT_NECK_PROCEED 112 Format("xt" Descr tagged_x )
#define GET_NIL_NECK_PROCEED 113 Format("x" Descr x )
#define UNIFY_VOID 114 Format("i" Descr voids )
#define UNIFY_VOID_1 115 Format("" )
#define UNIFY_VOID_2 116 Format("" )
#define UNIFY_VOID_3 117 Format("" )
#define UNIFY_VOID_4 118 Format("" )
#define UNIFY_X_VARIABLE 119 Format("x" Descr x )
#define UNIFY_X_VALUE 120 Format("x" Descr x )
#define UNIFY_X_LOCAL_VALUE 121 Format("x" Descr x )
#define UNIFY_Y_FIRST_VARIABLE 122 Format("y" Descr y )
#define UNIFY_Y_VARIABLE 123 Format("y" Descr y )
#define UNIFY_Y_FIRST_VALUE 124 Format("y" Descr y )
#define UNIFY_Y_VALUE 125 Format("y" Descr y )
#define UNIFY_Y_LOCAL_VALUE 126 Format("y" Descr y )
#define UNIFY_CONSTANTQ 127 Format("Qt" )
#define UNIFY_CONSTANT 128 Format("t" Descr tagged )
#define UNIFY_STRUCTUREQ 129 Format("Qf" )
#define UNIFY_STRUCTURE 130 Format("f" Descr functor )
#define UNIFY_NIL 131 Format("" Descr none )
#define UNIFY_LIST 132 Format("" Descr none )
#define UNIFY_CONSTANT_NECK_PROCEEDQ 133 Format("Qt" )
#define UNIFY_CONSTANT_NECK_PROCEED 134 Format("t" Descr tagged )
#define UNIFY_NIL_NECK_PROCEED 135 Format("" Descr none )
#define U2_VOID_XVAR 136 Format("ix" Descr i_x )
#define U2_VOID_XVAL 137 Format("ix" Descr i_x )
#define U2_VOID_XLVAL 138 Format("ix" Descr i_x )
#define U2_VOID_YFVAR 139 Format("iy" Descr i_y )
#define U2_VOID_YVAR 140 Format("iy" Descr i_y )
#define U2_VOID_YFVAL 141 Format("iy" Descr i_y )
#define U2_VOID_YVAL 142 Format("iy" Descr i_y )
#define U2_VOID_YLVAL 143 Format("iy" Descr i_y )
#define U2_XVAR_VOID 144 Format("xi" Descr x_i )
#define U2_XVAR_XVAR 145 Format("xx" Descr x_x )
#define U2_XVAR_XVAL 146 Format("xx" Descr x_x )
#define U2_XVAR_XLVAL 147 Format("xx" Descr x_x )
#define U2_XVAR_YFVAR 148 Format("xy" Descr x_y )
#define U2_XVAR_YVAR 149 Format("xy" Descr x_y )
#define U2_XVAR_YFVAL 150 Format("xy" Descr x_y )
#define U2_XVAR_YVAL 151 Format("xy" Descr x_y )
#define U2_XVAR_YLVAL 152 Format("xy" Descr x_y )
#define U2_YFVAR_VOID 153 Format("yi" Descr y_i )
#define U2_YVAR_VOID 154 Format("yi" Descr y_i )
#define U2_YFVAR_XVAR 155 Format("yx" Descr y_x )
#define U2_YVAR_XVAR 156 Format("yx" Descr y_x )
#define U2_YFVAR_YVAR 157 Format("yy" Descr y_y )
#define U2_YVAR_YVAR 158 Format("yy" Descr y_y )
#define U2_YFVAR_XVAL 159 Format("yx" Descr y_x )
#define U2_YVAR_XVAL 160 Format("yx" Descr y_x )
#define U2_YFVAR_XLVAL 161 Format("yx" Descr y_x )
#define U2_YVAR_XLVAL 162 Format("yx" Descr y_x )
#define U2_YFVAR_YVAL 163 Format("yy" Descr y_y )
#define U2_YVAR_YVAL 164 Format("yy" Descr y_y )
#define U2_YFVAR_YLVAL 165 Format("yy" Descr y_y )
#define U2_YVAR_YLVAL 166 Format("yy" Descr y_y )
#define U2_XVAL_VOID 167 Format("xi" Descr x_i )
#define U2_XLVAL_VOID 168 Format("xi" Descr x_i )
#define U2_XVAL_XVAR 169 Format("xx" Descr x_x )
#define U2_XLVAL_XVAR 170 Format("xx" Descr x_x )
#define U2_XVAL_YFVAR 171 Format("xy" Descr x_y )
#define U2_XLVAL_YFVAR 172 Format("xy" Descr x_y )
#define U2_XVAL_YVAR 173 Format("xy" Descr x_y )
#define U2_XLVAL_YVAR 174 Format("xy" Descr x_y )
#define U2_XVAL_XVAL 175 Format("xx" Descr x_x )
#define U2_XLVAL_XVAL 176 Format("xx" Descr x_x )
#define U2_XVAL_XLVAL 177 Format("xx" Descr x_x )
#define U2_XLVAL_XLVAL 178 Format("xx" Descr x_x )
#define U2_XVAL_YFVAL 179 Format("xy" Descr x_y )
#define U2_XLVAL_YFVAL 180 Format("xy" Descr x_y )
#define U2_XVAL_YVAL 181 Format("xy" Descr x_y )
#define U2_XLVAL_YVAL 182 Format("xy" Descr x_y )
#define U2_XVAL_YLVAL 183 Format("xy" Descr x_y )
#define U2_XLVAL_YLVAL 184 Format("xy" Descr x_y )
#define U2_YFVAL_VOID 185 Format("yi" Descr y_i )
#define U2_YVAL_VOID 186 Format("yi" Descr y_i )
#define U2_YLVAL_VOID 187 Format("yi" Descr y_i )
#define U2_YFVAL_XVAR 188 Format("yx" Descr y_x )
#define U2_YVAL_XVAR 189 Format("yx" Descr y_x )
#define U2_YLVAL_XVAR 190 Format("yx" Descr y_x )
#define U2_YVAL_YVAR 191 Format("yy" Descr y_y )
#define U2_YLVAL_YVAR 192 Format("yy" Descr y_y )
#define U2_YFVAL_XVAL 193 Format("yx" Descr y_x )
#define U2_YVAL_XVAL 194 Format("yx" Descr y_x )
#define U2_YLVAL_XVAL 195 Format("yx" Descr y_x )
#define U2_YFVAL_XLVAL 196 Format("yx" Descr y_x )
#define U2_YVAL_XLVAL 197 Format("yx" Descr y_x )
#define U2_YLVAL_XLVAL 198 Format("yx" Descr y_x )
#define U2_YFVAL_YFVAL 199 Format("yy" Descr y_y )
#define U2_YVAL_YFVAL 200 Format("yy" Descr y_y )
#define U2_YLVAL_YFVAL 201 Format("yy" Descr y_y )
#define U2_YFVAL_YVAL 202 Format("yy" Descr y_y )
#define U2_YVAL_YVAL 203 Format("yy" Descr y_y )
#define U2_YLVAL_YVAL 204 Format("yy" Descr y_y )
#define U2_YFVAL_YLVAL 205 Format("yy" Descr y_y )
#define U2_YVAL_YLVAL 206 Format("yy" Descr y_y )
#define U2_YLVAL_YLVAL 207 Format("yy" Descr y_y )
#define CUTB_X 208 Format("x" Descr x )
#define CUTF 209 Format("" Descr none )
#define CUTB_X_NECK 210 Format("x" Descr x )
#define CUTB_NECK 211 Format("" Descr none )
#define CUTB_X_NECK_PROCEED 212 Format("x" Descr x )
#define CUTB_NECK_PROCEED 213 Format("" Descr none )
#define CUTE_X 214 Format("x" Descr x )
#define CUTF_X 215 Format("x" Descr x )
#define CUTE_X_NECK 216 Format("x" Descr x )
#define CUTE_NECK 217 Format("" Descr none )
#define CUT_Y 218 Format("y" Descr y )
#define CHOICE_X 219 Format("x" Descr x )
#define CHOICE_YF 220 Format("y" Descr y )
#define CHOICE_Y 221 Format("y" Descr y )
#define FUNCTION_1Q 222 Format("QxxCli" )
#define FUNCTION_1 223 Format("xxCli" Descr function_x_x )
#define FUNCTION_2Q 224 Format("QxxxCli" )
#define FUNCTION_2 225 Format("xxxCli" Descr function_x_x_x )
#define BUILTIN_1Q 226 Format("QxC" )
#define BUILTIN_1 227 Format("xC" Descr builtin_x )
#define BUILTIN_2Q 228 Format("QxxC" )
#define BUILTIN_2 229 Format("xxC" Descr builtin_x_x )
#define BUILTIN_3Q 230 Format("QxxxC" )
#define BUILTIN_3 231 Format("xxxC" Descr builtin_x_x_x )
#define RETRY_INSTANCE 232 Format("" )
#define KONTINUE 233 Format("" )
#define LEAVE 234 Format("" )
#define EXIT_TOPLEVEL 235 Format("" )
#define DYNAMIC_NECK_PROCEED 236 Format("" )
#define RETRY_CQ 237 Format("QC" )
#define RETRY_C 238 Format("C" )


#define CI_CALL 241 Format("ii" Descr i_i )
#define CI_INARG 242 Format("ii" Descr i_i )
#define CI_OUTARG 243 Format("ii" Descr i_i )
#define CI_RETVAL 244 Format("ii" Descr i_i )
#define HEAPMARGIN_CALLQ 245 Format("Qli" )
#define HEAPMARGIN_CALL 246 Format("li" Descr l_i )
#define GET_CONSTRAINT 247 Format("x" Descr x )
#define BUMP_COUNTERQ 248 Format("Ql" )
#define BUMP_COUNTER 249 Format("l" Descr counter )
#define COUNTED_NECKQ 250 Format("Qll" )
#define COUNTED_NECK 251 Format("ll" Descr counter_counter )

#define PUT_LARGEQ 252 Format("QxL" )
#define PUT_LARGE 253 Format("xL" Descr large_x )
#define GET_LARGEQ 254 Format("QxL" )
#define GET_LARGE 255 Format("xL" Descr large_x )
#define GET_LARGE_X0Q 256 Format("QL" )
#define GET_LARGE_X0 257 Format("L" Descr large )
#define UNIFY_LARGEQ 258 Format("QL" )
#define UNIFY_LARGE 259 Format("L" Descr large )
#define INITTRUE 260 Format("e" Descr size )
#define FIRSTTRUE_N 261 Format("Y" Descr ylist_size )
